#Specify that we will configure a client and create a layer 3 VPN (TUN)
client
dev tun

#The server has address 10.0.0.62 and will be contact using UDP and port 1194
proto udp
remote 10.10.0.2 1194

#If a domain is used for the server, try to resolve indefinetly
resolv-retry infinite

#If the tunnel goes down or OpenVPN is restarted/reloaded (for example when a
#link goes down), keep as many of the existing settings as possible. This
#increases probability that tunnel interruptions will be transparent to
#applications sending traffic through the tunnel
persist-key
persist-tun
persist-local-ip

#We use certificate-based authentication, so these are the names of the
#different files related to that
ca ca.crt
cert client-1.crt
key client-1.key
ns-cert-type server
tls-auth /etc/openvpn/server-1/ta.key 1

#Verbosity level 3 gives a good trade-off between number of logs and information
verb 3

#Sane MTU
tun-mtu 1464

#Use OpenVPNs keep-alive mechanism to check if a tunnel is dead or not. With
#these values, we send one UDP ping every second and restart if 10 seconds pass
#without a reply
ping 1
ping-restart 10

#Configurating a static interface name for the tunnel makes configuring for
#example the firewall easier
dev tun0
